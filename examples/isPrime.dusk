func isPrime(n: Int) -> Int {
    if n < 2 {
        return 0;
    }
    if n < 4 {
        return 1;
    }
    if n % 2 == 0 || n % 3 == 0 {
        return 0;
    }

    let max = n;
    var i = 5;
    while 1 {
        if i >= max {
            return 1;
        }
        if n % i == 0 {
            return 0;
        }

        i = i + 2;
        if i >= max {
            return 1;
        }
        if n % i == 0 {
            return 0;
        }
        i = i + 4;
    }
}

func main() {
    let max = readln();
    for i in 0...max {
        println(i);
        println(isPrime(i));
    }
}

/*
program isprime;

function isprime(n: integer): integer;
var max, i: integer;
begin
    if n < 2 then
    begin
        isprime := 0;
        exit;
    end;
    if n < 4 then
    begin
        isprime := 1;
        exit
    end;
    if ((n mod 2) = 0) or ((n mod 3) = 0) then
    begin
        isprime := 0;
        exit
    end;

    isprime := 1;
    max := n;
    i := 5;
    while i < max do
    begin
        if( i > max ) then exit;
        if ((n mod i) = 0) then
        begin
            isprime := 0;
            exit;
        end;
        i := i + 2;
        if ( i < max ) then exit;
        if ((n mod i) = 0) then
        begin
            isprime := 0;
            exit;
        end;
        i := i + 4;
    end;
end;
*/
